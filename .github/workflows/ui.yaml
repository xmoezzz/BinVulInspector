name: Build UI image

on:
    push:
      branches:
        - main
      tags:
        - '*'

jobs:
  install:
    name: Install Dependencies and Build
    runs-on: ubuntu-latest

    container:
      image: node:18-slim
      options: --user node

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Configure npm and Install pnpm
        run: |
          npm config set registry https://registry.npmmirror.com
          npm install -g pnpm

      - name: Install Dependencies and Build
        run: |
          pnpm install
          pnpm build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./ui/dist

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./ui/dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set IMAGE_TAG
        id: set_image_tag
        # run: |
        #   if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
        #     IMAGE_TAG="${GITHUB_REF#refs/tags/}"
        #   elif [[ "${GITHUB_REF}" == refs/heads/main || "${GITHUB_REF}" == refs/heads/web ]]; then
        #     IMAGE_TAG="${GITHUB_SHA::7}"
        #   else
        #     IMAGE_TAG="latest"
        #   fi
        #   echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Debug IMAGE_TAG
        run: echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"

      - name: Build and Push Docker Image
        run: |
          cd ui && docker buildx build \
            --platform linux/amd64 \
            --build-arg CI_COMMIT_SHORT_SHA=${{ github.sha }} \
            --build-arg CI_COMMIT_TAG=${{ env.IMAGE_TAG }} \
            --push \
            -t ghcr.io/${{ github.repository_owner }}/ui:${{ env.IMAGE_TAG }} \
            -f ui/docker/Dockerfile .
